// on initial load
  // setup soundmanager
  // create Sound objects
  // setup waveform

// on play


// within playlist load
  // change waveform display

// leaving playlist
  // destroy current Sound objects
  // create Sound objects


soundManager.onready(function() {
 populatePlaylist();
});



document.addEventListener("turbolinks:click", function(event){

  //alert(event.data.url.split('playlists/')[1])
    //Sound.destroyAll();
})

// Dom Manipulations here must be idempotent.
// This event fires on each page load
// but also when we hit back / forward and get a cached page
// so it will re-fire on pages where it's already been fired
document.addEventListener("turbolinks:load", function() {
    populatePlaylist()
    showWaveform()

    // svg default playlists
    $('#playlist-and-track-content .no_pic').each(function(){
      $(this).append(makeSVGFromTitle(800, $('h1:first').text().trim()))
      $(this).removeClass('no_pic') // otherwise turbolinks:load will keep appending
    })

    $('li a .no_pic').each(function(){
      $(this).append(makeSVGFromTitle(800, $(this).parent().attr('title').trim()))
      $(this).removeClass('no_pic') // otherwise turbolinks:load will keep appending
    })

    $("a.add_to_favorites").load("<%= asset_path('default/fave-animation.svg') %>");

    $("div.asset").click( function() {
        var myFaveAnim = new FaveAnim($(this).find("a.add_to_favorites"));
        myFaveAnim.init();
        if ( $(this).find("a.add_to_favorites").hasClass("favorited") ) {
            myFaveAnim.setFave();
        }
        $(this).find("a.add_to_favorites").click( function() {
            if ( $(this).hasClass("favorited") ) {
                myFaveAnim.clickFave();
            } else {
                myFaveAnim.clickUnfave();
            }
        });
    });

    $("a.follow").empty();
    $("a.follow").append( $("<div class='follow_animation'></div>") );
    $("a.follow").addClass("white_theme");

    $("a.follow .follow_animation").load("<%= asset_path('default/fave-animation.svg') %>", function(){
        var myFaveAnim = new FaveAnim($("a.follow"));
        myFaveAnim.init();

        if ( $(this).parent().hasClass("following") ) {
            myFaveAnim.setFave();
        }

        $("a.follow").click( function() {
            if ( $(this).hasClass("following") ) {
                myFaveAnim.clickFave();
            } else {
                myFaveAnim.clickUnfave();
            }
        });
    });

    $("body").append( $("<div id='play-svg-container' style='display:none'></div)") );
    $("#play-svg-container").load("<%= asset_path('default/play-animation.svg') %>");
    $(".sprites-play > a").load("<%= asset_path('default/play-icon.svg') %>");

    var myPlayAnimation = new PlayAnimation();

    $("div.play-button a").click(function() {
        var playAnimationSVG = $("#playAnimationSVG");
        $(".playIconSymbol").show();
        $(this).find("#playIconSymbol").hide();
        $(this).append(playAnimationSVG);
        myPlayAnimation.init()
        myPlayAnimation.setPlay()
        myPlayAnimation.showLoading();
        TweenMax.delayedCall(1, function() { myPlayAnimation.showPause(); })
    })

});



// playlist player
$(document).on('click', '.track-content > .player .play-button,' +
                      '.tracklist [data-sound-id] .play-button', function(e) {
  console.warn("PLAYING!!!")
  var soundId = $(this).parents('[data-sound-id]').data('sound-id');
  var li = $('.playlist li[data-sound-id=' + attr(soundId) + ']');

  // Pause other tracks unless this event was triggered programmatically
  if (!e.isTrigger)
    Sound.pauseAll();

  var sound = Sound.load(soundId)
  if (sound.id != Sound.getId(window.location.pathname))
    sound.setPosition(0)
  sound.play();

  if (window.location.href == this.href) {
    e.preventDefault();
    return false;
  }
  var myPlayAnimation = new PlayAnimation();
  var playAnimationSVG = $("#playAnimationSVG");
  $(".playIconSymbol").show();
  $(this).find("#playIconSymbol").hide();
  $(this).append(playAnimationSVG);
  myPlayAnimation.init()
  myPlayAnimation.setPlay()
  myPlayAnimation.showLoading();
  TweenMax.delayedCall(1, function() { myPlayAnimation.showPause(); })
});

// single track page
$(document).on('click', '.track-post > .player .play-button', function(e) {
  var url = $(this).find('a').attr('href');
  var soundId = $(this).parent('[data-sound-id]').data('sound-id');
  var sound = Sound.load(url);

  sound.finished(null).finished(function() {
    changeControlActionToPlay(this.id);
  });

  Sound.pauseAll();
  sound.play();
});

$(document).on('click', '[data-sound-id] .pause-button', function(e) {
  console.warn("PAUSSSSSE")
  var soundId = $(this).parent('[data-sound-id]').data('sound-id');
  Sound.pause(soundId);
  e.preventDefault();
  return false;
});
